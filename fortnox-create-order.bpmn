<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:bioc="http://bpmn.io/schema/bpmn/biocolor/1.0" xmlns:color="http://www.omg.org/spec/BPMN/non-normative/color/1.0" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_10b0azj" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="5.2.0" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.17.0">
  <bpmn:collaboration id="Collaboration_1vb2z6i">
    <bpmn:participant id="Participant_18nk9ma" name="CREATE ORDER" processRef="fortnox-create-order" />
  </bpmn:collaboration>
  <bpmn:process id="fortnox-create-order" name="Onify Blueprint: Create order in Fortnox" isExecutable="true">
    <bpmn:laneSet id="LaneSet_055j0yj">
      <bpmn:lane id="Lane_1v6yci1" name="ONIFY">
        <bpmn:flowNodeRef>start</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>get-fortnox-settings</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>access-token-expired</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>refresh-access-token</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>end</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>add-order-row</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>prepare-order</bpmn:flowNodeRef>
      </bpmn:lane>
      <bpmn:lane id="Lane_1gjhkf7" name="FORTNOX">
        <bpmn:flowNodeRef>create-order</bpmn:flowNodeRef>
      </bpmn:lane>
    </bpmn:laneSet>
    <bpmn:sequenceFlow id="Flow_0cj41ib" sourceRef="refresh-access-token" targetRef="prepare-order" />
    <bpmn:sequenceFlow id="Flow_1x5mp8t" sourceRef="create-order" targetRef="end" />
    <bpmn:sequenceFlow id="Flow_0918gu2" name="Yes" sourceRef="access-token-expired" targetRef="refresh-access-token" />
    <bpmn:sequenceFlow id="Flow_13if43g" name="No" sourceRef="access-token-expired" targetRef="prepare-order">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression" language="js">var now = new Date();
const timestampDate = new Date(environment.output.fortnoxSettings._fortnox_access_token.timestamp);
timestampDate.setSeconds(timestampDate.getSeconds() + environment.output.fortnoxSettings._fortnox_access_token.expires_in);

next(null, now &lt; timestampDate);</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_1c793i8" sourceRef="get-fortnox-settings" targetRef="access-token-expired" />
    <bpmn:sequenceFlow id="Flow_178qk1a" sourceRef="start" targetRef="get-fortnox-settings" />
    <bpmn:startEvent id="start" name="Create Order">
      <bpmn:outgoing>Flow_178qk1a</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:serviceTask id="get-fortnox-settings" name="Get Fortnox settings">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="query">
              <camunda:map>
                <camunda:entry key="tag">fortnox</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="url">/my/config/settings</camunda:inputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>onifyApiRequest</camunda:connectorId>
        </camunda:connector>
        <camunda:inputOutput>
          <camunda:inputParameter name="state">
            <camunda:script scriptFormat="js">next(null, {name: content.name, id: content.id});</camunda:script>
          </camunda:inputParameter>
          <camunda:inputParameter name="process">
            <camunda:map>
              <camunda:entry key="tag">fortnox</camunda:entry>
            </camunda:map>
          </camunda:inputParameter>
          <camunda:outputParameter name="fortnoxSettings">${content.output.body}</camunda:outputParameter>
          <camunda:outputParameter name="state">
            <camunda:script scriptFormat="js">next(null, {id: content.id, result: {done: true}});</camunda:script>
          </camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_178qk1a</bpmn:incoming>
      <bpmn:outgoing>Flow_1c793i8</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:exclusiveGateway id="access-token-expired" name="Access-Token expired?" default="Flow_0918gu2">
      <bpmn:incoming>Flow_1c793i8</bpmn:incoming>
      <bpmn:outgoing>Flow_13if43g</bpmn:outgoing>
      <bpmn:outgoing>Flow_0918gu2</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:serviceTask id="refresh-access-token" name="Refresh Fortnox Access-Token">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">/my/workflows/run/fortnox-refresh-access-token</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>onifyApiRequest</camunda:connectorId>
        </camunda:connector>
        <camunda:inputOutput>
          <camunda:inputParameter name="state">
            <camunda:script scriptFormat="js">next(null, {name: content.name, id: content.id});</camunda:script>
          </camunda:inputParameter>
          <camunda:outputParameter name="state">
            <camunda:script scriptFormat="js">next(null, {id: content.id, result: {done: true}});</camunda:script>
          </camunda:outputParameter>
          <camunda:outputParameter name="setAccessToken">
            <camunda:script scriptFormat="js">environment.output.fortnoxSettings._fortnox_access_token.access_token  = content.output.body.output.access_token;
next();</camunda:script>
          </camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0918gu2</bpmn:incoming>
      <bpmn:outgoing>Flow_0cj41ib</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1s4fons" sourceRef="prepare-order" targetRef="add-order-row" />
    <bpmn:endEvent id="end" name="Order Created">
      <bpmn:incoming>Flow_1x5mp8t</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:task id="add-order-row" name="Add order row">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="state">
            <camunda:script scriptFormat="js">next(null, {name: content.name, id: content.id});</camunda:script>
          </camunda:inputParameter>
          <camunda:outputParameter name="orderRow">
            <camunda:map>
              <camunda:entry key="DeliveredQuantity">1</camunda:entry>
              <camunda:entry key="OrderedQuantity">1</camunda:entry>
              <camunda:entry key="Description">Article test 1</camunda:entry>
              <camunda:entry key="Price">100</camunda:entry>
              <camunda:entry key="VAT">25</camunda:entry>
            </camunda:map>
          </camunda:outputParameter>
          <camunda:outputParameter name="state">
            <camunda:script scriptFormat="js">next(null, {id: content.id, result: {done: true}});</camunda:script>
          </camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1s4fons</bpmn:incoming>
      <bpmn:outgoing>Flow_0chw86v</bpmn:outgoing>
    </bpmn:task>
    <bpmn:sequenceFlow id="Flow_0chw86v" sourceRef="add-order-row" targetRef="create-order" />
    <bpmn:task id="prepare-order" name="Prepare order">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="state">
            <camunda:script scriptFormat="js">next(null, {name: content.name, id: content.id});</camunda:script>
          </camunda:inputParameter>
          <camunda:outputParameter name="order">
            <camunda:map>
              <camunda:entry key="CustomerNumber">1</camunda:entry>
              <camunda:entry key="Comments">Testing testing</camunda:entry>
              <camunda:entry key="YourReference">John Doe</camunda:entry>
              <camunda:entry key="OurReference">Jane Doe</camunda:entry>
              <camunda:entry key="OrderRows">${environment.output.orderRow}</camunda:entry>
            </camunda:map>
          </camunda:outputParameter>
          <camunda:outputParameter name="state">
            <camunda:script scriptFormat="js">next(null, {id: content.id, result: {done: true}});</camunda:script>
          </camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_13if43g</bpmn:incoming>
      <bpmn:incoming>Flow_0cj41ib</bpmn:incoming>
      <bpmn:outgoing>Flow_1s4fons</bpmn:outgoing>
    </bpmn:task>
    <bpmn:serviceTask id="create-order" name="Create order in Fortnox">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">https://api.fortnox.se/3/orders</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="responseType">json</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Authorization">Bearer ${environment.output.fortnoxSettings._fortnox_access_token.access_token}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="throwHttpErrors">${false}</camunda:inputParameter>
            <camunda:inputParameter name="json">
              <camunda:script scriptFormat="js">environment.output.order.OrderRows = [environment.output.orderRow];
next(null, {
  Order: environment.output.order
});</camunda:script>
            </camunda:inputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>httpRequest</camunda:connectorId>
        </camunda:connector>
        <camunda:inputOutput>
          <camunda:inputParameter name="state">
            <camunda:script scriptFormat="js">next(null, {name: content.name, id: content.id});</camunda:script>
          </camunda:inputParameter>
          <camunda:outputParameter name="state">
            <camunda:script scriptFormat="js">next(null, {id: content.id, result: {done: true}});</camunda:script>
          </camunda:outputParameter>
          <camunda:outputParameter name="output">${content.output.body}</camunda:outputParameter>
          <camunda:outputParameter name="log">
            <camunda:script scriptFormat="js">console.log('Order created in Fortnox: ' + content.output.body.Order.DocumentNumber);
next();</camunda:script>
          </camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0chw86v</bpmn:incoming>
      <bpmn:outgoing>Flow_1x5mp8t</bpmn:outgoing>
    </bpmn:serviceTask>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Collaboration_1vb2z6i">
      <bpmndi:BPMNShape id="Participant_18nk9ma_di" bpmnElement="Participant_18nk9ma" isHorizontal="true">
        <dc:Bounds x="140" y="100" width="1200" height="470" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Lane_1gjhkf7_di" bpmnElement="Lane_1gjhkf7" isHorizontal="true">
        <dc:Bounds x="170" y="354" width="1170" height="216" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Lane_1v6yci1_di" bpmnElement="Lane_1v6yci1" isHorizontal="true">
        <dc:Bounds x="170" y="100" width="1170" height="254" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_0chw86v_di" bpmnElement="Flow_0chw86v">
        <di:waypoint x="900" y="210" />
        <di:waypoint x="940" y="210" />
        <di:waypoint x="940" y="460" />
        <di:waypoint x="1000" y="460" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1s4fons_di" bpmnElement="Flow_1s4fons">
        <di:waypoint x="750" y="210" />
        <di:waypoint x="800" y="210" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_178qk1a_di" bpmnElement="Flow_178qk1a">
        <di:waypoint x="278" y="210" />
        <di:waypoint x="340" y="210" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1c793i8_di" bpmnElement="Flow_1c793i8">
        <di:waypoint x="440" y="210" />
        <di:waypoint x="485" y="210" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_13if43g_di" bpmnElement="Flow_13if43g">
        <di:waypoint x="535" y="210" />
        <di:waypoint x="650" y="210" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="547" y="193" width="15" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0918gu2_di" bpmnElement="Flow_0918gu2">
        <di:waypoint x="510" y="235" />
        <di:waypoint x="510" y="310" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="516" y="241" width="18" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1x5mp8t_di" bpmnElement="Flow_1x5mp8t">
        <di:waypoint x="1100" y="460" />
        <di:waypoint x="1160" y="460" />
        <di:waypoint x="1160" y="210" />
        <di:waypoint x="1232" y="210" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0cj41ib_di" bpmnElement="Flow_0cj41ib">
        <di:waypoint x="510" y="390" />
        <di:waypoint x="510" y="440" />
        <di:waypoint x="700" y="440" />
        <di:waypoint x="700" y="250" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="start" bioc:stroke="#43a047" bioc:fill="#c8e6c9" color:background-color="#c8e6c9" color:border-color="#43a047">
        <dc:Bounds x="242" y="192" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="227" y="235" width="66" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0yibfwb_di" bpmnElement="get-fortnox-settings">
        <dc:Bounds x="340" y="170" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0ibx6jn_di" bpmnElement="access-token-expired" isMarkerVisible="true">
        <dc:Bounds x="485" y="185" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="476" y="147.5" width="68" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0gg8t68" bpmnElement="refresh-access-token">
        <dc:Bounds x="460" y="310" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_09omjuj_di" bpmnElement="end" bioc:stroke="#e53935" bioc:fill="#ffcdd2" color:background-color="#ffcdd2" color:border-color="#e53935">
        <dc:Bounds x="1232" y="192" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1214" y="168" width="71" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_15c8bdn" bpmnElement="add-order-row">
        <dc:Bounds x="800" y="170" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1d5dvgq_di" bpmnElement="prepare-order">
        <dc:Bounds x="650" y="170" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0zgho8s" bpmnElement="create-order">
        <dc:Bounds x="1000" y="420" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>